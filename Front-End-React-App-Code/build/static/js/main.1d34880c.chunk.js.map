{"version":3,"sources":["logo.svg","Header.js","Body.js","LoginButton.js","LogoutButton.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","root","bullet","display","transform","title","fontSize","pos","marginBottom","Header","props","classes","React","useState","named_trees","un_named_trees","trees_named_by_me","trees_named_by_user","state","setState","customerName","setCustomerName","customerNames","setCustomerNames","handleChange","event","target","name","checked","myFunc","handleCustomerNameChange","value","getDataFromArrays","array","rows","i","length","customer_name","push","a","fetch","then","response","json","data","console","log","result","JSON","parse","useEffect","fetchCustomerNames","Card","className","CardContent","class","FormControlLabel","control","Checkbox","onChange","label","FormControl","InputLabel","id","Select","labelId","map","index","MenuItem","renderDropDown","createData","named_by","descendingComparator","b","orderBy","getComparator","order","stableSort","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","TableCell","padding","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","width","paper","table","border","clip","height","overflow","position","top","Body","setOrder","setOrderBy","selected","page","setPage","dense","rowsPerPage","setRowsPerPage","open","setOpen","treeName","setTreeName","treeId","setTreeId","loggedInCustomerName","setLoggedInCustomerName","setTreeRows","updateState","useCallback","reFetchListBasedOnCheckBoxState","myProp","fetchUnNamedTreeInfoPage","fetchTreesNamedInfoPage","fetchTreesNamedByMePage","fetchTreesNamedByUserPage","fetchTreeInfoPage","handleClose","url","encodeURI","element","page_number","logged_in_user_name","handleClick","emptyRows","Math","min","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","DialogActions","Button","Paper","TableContainer","Table","size","aria-label","TableBody","slice","row","isItemSelected","indexOf","hover","role","aria-checked","tabIndex","Tooltip","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","LoginButton","loginWithRedirect","useAuth0","LogoutButton","logout","returnTo","App","user","isAuthenticated","newState","Object","assign","isLoading","addLoggedInUserName","nickname","methodName","toString","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.1d34880c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },    \r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  }));\r\n\r\nexport function Header(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        named_trees: false,\r\n        un_named_trees: false,\r\n        trees_named_by_me: false,\r\n        trees_named_by_user: false,\r\n      });\r\n\r\n      const [customerName, setCustomerName] = React.useState('');\r\n\r\n      const [customerNames, setCustomerNames] = React.useState([]);\r\n     \r\n      const handleChange = (event) => {\r\n        //setState({ ...state, [event.target.name]: event.target.checked });\r\n\r\n        if(event.target.name == \"un_named_trees\" && event.target.checked == true) {\r\n            props.myFunc(\"get_tree_info_un_named_page_true\");\r\n            setState({named_trees:false, un_named_trees:true,trees_named_by_me:false, trees_named_by_user:false});\r\n        }\r\n\r\n        if(event.target.name == \"un_named_trees\" && event.target.checked == false) {\r\n            props.myFunc(\"get_tree_info_un_named_page_false\");\r\n            setState({named_trees:false, un_named_trees:false,trees_named_by_me:false, trees_named_by_user:false});\r\n        }\r\n\r\n        if(event.target.name == \"named_trees\" && event.target.checked == true) {\r\n            props.myFunc(\"get_tree_info_named_page_true\");\r\n            setState({named_trees:true, un_named_trees:false,trees_named_by_me:false, trees_named_by_user:false});\r\n        }\r\n\r\n        if(event.target.name == \"named_trees\" && event.target.checked == false) {\r\n            props.myFunc(\"get_tree_info_named_page_false\");\r\n            setState({named_trees:false, un_named_trees:false,trees_named_by_me:false, trees_named_by_user:false});\r\n        }        \r\n\r\n        if(event.target.name == \"trees_named_by_me\" && event.target.checked == true) {\r\n            props.myFunc(\"get_trees_named_by_me_true\");\r\n            setState({named_trees:false, un_named_trees:false,trees_named_by_me:true, trees_named_by_user:false});\r\n        }\r\n\r\n        if(event.target.name == \"trees_named_by_me\" && event.target.checked == false) {\r\n            props.myFunc(\"get_trees_named_by_me_false\");\r\n            setState({named_trees:false, un_named_trees:false,trees_named_by_me:false, trees_named_by_user:false});\r\n        }\r\n\r\n        if(event.target.name == \"trees_named_by_user\" && event.target.checked == true) {\r\n            props.myFunc(\"get_trees_named_by_user_true\");\r\n            setState({named_trees:false, un_named_trees:false,trees_named_by_me:false, trees_named_by_user:true});\r\n        }\r\n\r\n        if(event.target.name == \"trees_named_by_user\" && event.target.checked == false) {\r\n            props.myFunc(\"get_trees_named_by_user_false\");\r\n            setState({named_trees:false, un_named_trees:false,trees_named_by_me:false, trees_named_by_user:false});\r\n            setCustomerName(\"\")\r\n        }\r\n\r\n      };\r\n\r\n      const handleCustomerNameChange = (event) => {\r\n        props.myFunc(\"get_trees_named_by_customer\", event.target.value)\r\n        setCustomerName(event.target.value);\r\n      }\r\n\r\n      useEffect(() => {\r\n        fetchCustomerNames();\r\n      }, []);\r\n\r\n    function getDataFromArrays (array) {\r\n        let rows = []\r\n        for(let i = 0 ;i < array.length; i++) {\r\n          let element = array[i];\r\n    \r\n          let customer_name = element[0];\r\n          rows.push(customer_name);\r\n    \r\n        }\r\n        return rows;\r\n    }\r\n\r\n    async function fetchCustomerNames() {\r\n\r\n        let url = 'https://k5tkgu2caj.execute-api.us-west-2.amazonaws.com/Dev';\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              console.log(data.result)\r\n              let array = JSON.parse(data.result);\r\n              let rows = getDataFromArrays(array);\r\n              setCustomerNames(rows);\r\n        } )    \r\n    }\r\n\r\n    function renderDropDown() {\r\n        \r\n        //await fetchCustomerNames();\r\n\r\n        if(state.trees_named_by_user == true) {\r\n            return (\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Customer Name</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={customerName}\r\n                        onChange={handleCustomerNameChange}\r\n                    >\r\n                        {customerNames.map((customer_name, index) =>\r\n                            <MenuItem key={index} value={customer_name}>{customer_name}</MenuItem>\r\n                        )}\r\n\r\n                    </Select>\r\n                </FormControl>); \r\n        }\r\n    }\r\n\r\n  return (\r\n\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <div class=\"grid grid-flow-col grid-rows-2 grid-cols-2 gap-4\">\r\n                <div>\r\n                    <FormControlLabel\r\n                            control={<Checkbox checked={state.named_trees} onChange={handleChange} name=\"named_trees\" />}\r\n                            label=\"Show Named Trees\"\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                            control={<Checkbox checked={state.un_named_trees} onChange={handleChange} name=\"un_named_trees\" />}\r\n                            label=\"Show Un-named Trees\"\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                            control={<Checkbox checked={state.trees_named_by_me} onChange={handleChange} name=\"trees_named_by_me\" />}\r\n                            label=\"Show Trees named by me\"\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                            control={<Checkbox checked={state.trees_named_by_user} onChange={handleChange} name=\"trees_named_by_user\" />}\r\n                            label=\"Show Trees named by Customer\"\r\n                        />\r\n                    {renderDropDown()}\r\n                </div>\r\n\r\n            </div>\r\n      </CardContent>\r\n    </Card>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nfunction createData(id, name, named_by) {\r\n  return { id, name, named_by };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'treeid', numeric: false, disablePadding: true, label: 'Tree ID' },\r\n  { id: 'tree_name', numeric: true, disablePadding: false, label: 'Tree Name' },\r\n  { id: 'named_by', numeric: true, disablePadding: false, label: 'Named By' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Tree Information\r\n        </Typography>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport function Body(props) {\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [treeName, setTreeName] = React.useState(\"\");\r\n  const [treeId, setTreeId] = React.useState(0);\r\n  const [loggedInCustomerName, setLoggedInCustomerName] = React.useState(\"\");\r\n  const [rows, setTreeRows] = React.useState([]);\r\n\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  function reFetchListBasedOnCheckBoxState() {\r\n\r\n    if(props.myProp.un_named_trees == true) {\r\n      fetchUnNamedTreeInfoPage();\r\n    } else if (props.myProp.named_trees == true) {\r\n      fetchTreesNamedInfoPage();\r\n    } else if (props.myProp.trees_named_by_me == true) {\r\n      fetchTreesNamedByMePage();\r\n    } else if(props.myProp.trees_named_by_user == true && props.myProp.customerName != \"\") {\r\n      fetchTreesNamedByUserPage();\r\n    } else {\r\n      fetchTreeInfoPage();\r\n    }\r\n\r\n  }\r\n\r\n  async function handleClose () {\r\n\r\n    console.log(treeName)\r\n    console.log(treeId)\r\n    console.log(loggedInCustomerName)\r\n\r\n    let url = 'https://00q7n7ycb3.execute-api.us-west-2.amazonaws.com/Dev?';\r\n    url = url + \"tree_id=\" + treeId;\r\n    url = url + \"&tree_name=\" + treeName;\r\n    url = url + \"&customer_name=\" + loggedInCustomerName;\r\n    url = encodeURI(url);\r\n\r\n    fetch(url)\r\n        //.then(response => response.json())\r\n        .then(response => response.json())\r\n        .then(data => {console.log(data.result)} )\r\n\r\n    setOpen(false);\r\n\r\n    reFetchListBasedOnCheckBoxState();\r\n\r\n    setPage(page + 1);\r\n\r\n    // forceUpdate();\r\n  };\r\n\r\n  function getDataFromArrays (array) {\r\n    let rows = []\r\n    for(let i = 0 ;i < array.length; i++) {\r\n      let element = array[i];\r\n\r\n      let tree_id = element[0];\r\n      let tree_name = element[1];\r\n      let named_by = element[2];\r\n\r\n      let data = createData(tree_id, tree_name, named_by);\r\n      rows.push(data);\r\n\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  async function fetchTreesNamedInfoPage() {\r\n\r\n    let page_number = page\r\n    let url = 'https://ul8jj6g53h.execute-api.us-west-2.amazonaws.com/Dev?page_number=';\r\n    url = url + page_number;\r\n\r\n    setTreeRows([])\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data.result)\r\n          let array = JSON.parse(data.result);\r\n          let rows = getDataFromArrays(array);\r\n          setTreeRows(rows);\r\n    } )\r\n  }\r\n\r\n  async function fetchTreesNamedByUserPage() {\r\n\r\n    let page_number = page\r\n    let url = 'https://0z3d2olyda.execute-api.us-west-2.amazonaws.com/Dev?customer_name=';\r\n    url = url + props.myProp.customer_name + \"&page_number=\"\r\n    url = url + page_number\r\n\r\n    url = encodeURI(url);\r\n  \r\n    setTreeRows([])\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data.result)\r\n          let array = JSON.parse(data.result);\r\n          let rows = getDataFromArrays(array);\r\n          setTreeRows(rows);\r\n    } )\r\n  }\r\n\r\n  async function fetchTreesNamedByMePage() {\r\n\r\n    let page_number = page\r\n    setTreeRows([])\r\n    let url = 'https://0z3d2olyda.execute-api.us-west-2.amazonaws.com/Dev?customer_name=';\r\n    url = url + loggedInCustomerName + \"&page_number=\"\r\n    url = url + page_number\r\n\r\n    url = encodeURI(url);\r\n\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data.result)\r\n          let array = JSON.parse(data.result);\r\n          let rows = getDataFromArrays(array);\r\n          setTreeRows(rows);\r\n    } )    \r\n  }\r\n\r\n  async function fetchUnNamedTreeInfoPage() {\r\n\r\n    let page_number = page\r\n    let url = 'https://x5jiirt94l.execute-api.us-west-2.amazonaws.com/Dev?page_number=';\r\n    url = url + page_number;\r\n\r\n    setTreeRows([])\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data.result)\r\n          let array = JSON.parse(data.result);\r\n          let rows = getDataFromArrays(array);\r\n          setTreeRows(rows);\r\n    } )    \r\n  }\r\n\r\n async function fetchTreeInfoPage() {\r\n\r\n    let page_number = page;\r\n    let url = 'https://n6khjm2uoe.execute-api.us-west-2.amazonaws.com/Dev?page_number=';\r\n    url = url + page_number;\r\n\r\n    setTreeRows([])\r\n    fetch(url)\r\n        //.then(response => response.json())\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data.result)\r\n          let array = JSON.parse(data.result);\r\n          let rows = getDataFromArrays(array);\r\n          setTreeRows(rows);\r\n    } )    \r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"body.js useeffect\")\r\n    setLoggedInCustomerName(props.myProp.logged_in_user_name);\r\n    reFetchListBasedOnCheckBoxState();\r\n  }, []);\r\n\r\n  const handleClick = (event, id) => {\r\n    setTreeId(id);\r\n    setOpen(true);\r\n\r\n  };\r\n\r\n  const setTextValue = (event) => {\r\n    setTreeName(event.target.value);\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Tree Name</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Enter the name of the tree.\r\n          </DialogContentText>\r\n          <TextField\r\n            onChange={setTextValue}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Tree Name\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              // onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Tooltip title=\"Click to add Tree Name\"><AddIcon onClick={handleClick}></AddIcon></Tooltip>\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.name}</TableCell>\r\n                      <TableCell align=\"right\">{row.named_by}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nexport const LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button onClick={() => loginWithRedirect()}>Log In</button>;\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nexport const LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  const uri = \"https://nametreesfornaveeed.s3.us-west-2.amazonaws.com/index.html\"\r\n  return (\r\n    <button onClick={() => logout({ returnTo: uri })}>\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","\nimport logo from './logo.svg';\nimport './App.css';\nimport {Header} from './Header'\nimport {Body} from './Body'\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport {LoginButton} from './LoginButton'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport {LogoutButton} from './LogoutButton'\n\nfunction App() {\n  const [state, setState] = React.useState({\n    named_trees: true,\n    un_named_trees: true,\n    trees_named_by_me: true,\n    trees_named_by_user: true,\n    customer_name:\"\",\n    logged_in_user_name:\"\"\n  });\n\n  const { user, isAuthenticated, isLoading } = useAuth0();\n\n  useEffect(() => {\n    console.log(\"app.js\")\n    // if(isAuthenticated) { \n    //   setLoggedInUserNameInState(user.nickname)\n    // }\n  });\n\n\n  function callHeadMethod(methodName, customerName) {\n\n    if(\"get_tree_info_un_named_page_true\" == methodName) {\n      setState({named_trees:false, un_named_trees:true, trees_named_by_me:false, trees_named_by_user:false, customer_name:\"\" });\n    }\n\n    if(\"get_tree_info_un_named_page_false\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:false, customer_name:\"\" });\n    }\n\n    if(\"get_tree_info_named_page_true\" == methodName) {\n      setState({named_trees:true, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:false, customer_name:\"\" });\n    }\n\n    if(\"get_tree_info_named_page_false\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:false, customer_name:\"\" });\n    }  \n  \n    if(\"get_tree_info_by_user_named_page_true\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:true, customer_name:\"\" });\n    }\n  \n    if(\"get_tree_info_by_user_named_page_false\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:false, customer_name:\"\" });\n    }\n  \n    if(\"get_trees_named_by_me_true\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:true, trees_named_by_user:false, customer_name:\"\" });\n    }\n\n    if(\"get_trees_named_by_me_false\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:false, customer_name:\"\" });\n    }\n\n    if(\"get_trees_named_by_customer\" == methodName) {\n      setState({named_trees:false, un_named_trees:false, trees_named_by_me:false, trees_named_by_user:true, customer_name:customerName });\n    }\n\n  }\n\n  async function addLoggedInUserName(customer_name) {\n\n    if(state.logged_in_user_name != customer_name) {\n      let newState = Object.assign({}, state);\n      newState.logged_in_user_name = customer_name;\n  \n      setState(newState)\n  \n    }\n\n    let url = 'https://0oua10pc4j.execute-api.us-west-2.amazonaws.com/Dev?customer_name=';\n    url = url + customer_name;\n\n    fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data.result)\n    } )    \n  }\n\n  function setLoggedInUserNameInState(nickname) {\n    console.log(nickname)\n\n  }\n\n  if(isAuthenticated) {\n\n    console.log(user)\n\n    {addLoggedInUserName(user.nickname)}\n\n    return (<div  className=\"flex justify-center\">\n\n          <table>\n            <tr><LogoutButton></LogoutButton></tr>\n            <tr>\n              <Header\n                myFunc={callHeadMethod}      \n              ></Header>\n            </tr>\n            <tr>\n              <Body\n                myProp={state}\n                key={state.named_trees.toString().concat(state.un_named_trees.toString()).concat(state.trees_named_by_me.toString()).concat(state.trees_named_by_user.toString()).concat(state.customer_name.toString())}\n              ></Body>\n            </tr>\n        </table>\n      </div>)\n  } else {\n    return (<div className=\"flex justify-center\"><LoginButton></LoginButton></div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nconst uri = \"https://nametreesfornaveeed.s3.us-west-2.amazonaws.com/index.html\"\nReactDOM.render(\n  \n\n    <Auth0Provider\n      domain=\"dev--f-9o7ez.us.auth0.com\"\n      clientId=\"cApQco8t8vfzyH2pXoojpL0XZeNlHYKP\"\n      redirectUri={uri}\n    >\n      <App />\n    </Auth0Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}